// <auto-generated />
using System;
using Catalog.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Catalog.Persistence.Migrations
{
    [DbContext(typeof(CatalogDbContext))]
    partial class CatalogDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Catalog.Domain.Categories.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("nvarchar(90)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cdd09831-7b35-4778-9e4b-fcbacb570d46"),
                            Name = "Fruits"
                        },
                        new
                        {
                            Id = new Guid("456a79b0-f3db-413e-a850-84b1fbf44f98"),
                            Name = "Vegetables"
                        });
                });

            modelBuilder.Entity("Catalog.Domain.Products.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal?>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("nvarchar(90)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("584cae8d-89d6-48c9-ad33-89dc47190388"),
                            CategoryId = new Guid("cdd09831-7b35-4778-9e4b-fcbacb570d46"),
                            Description = "Orange fruit",
                            Discount = 0m,
                            Image = "",
                            Price = 2m,
                            Quantity = 2,
                            Title = "Orange"
                        },
                        new
                        {
                            Id = new Guid("b3a22697-9f71-4b6a-9cae-667f415cbd6c"),
                            CategoryId = new Guid("cdd09831-7b35-4778-9e4b-fcbacb570d46"),
                            Description = "Red fruit",
                            Discount = 0m,
                            Image = "",
                            Price = 3m,
                            Quantity = 3,
                            Title = "Apple"
                        },
                        new
                        {
                            Id = new Guid("135b684e-8f74-4c9b-9177-e4ea50b68605"),
                            CategoryId = new Guid("456a79b0-f3db-413e-a850-84b1fbf44f98"),
                            Description = "Green vegetable",
                            Discount = 0m,
                            Image = "",
                            Price = 4m,
                            Quantity = 1,
                            Title = "Cucumber"
                        },
                        new
                        {
                            Id = new Guid("ca4ff4bb-f52f-4669-a4ff-a8c1d1101b7f"),
                            CategoryId = new Guid("456a79b0-f3db-413e-a850-84b1fbf44f98"),
                            Description = "Red vegetable",
                            Discount = 0m,
                            Image = "",
                            Price = 1m,
                            Quantity = 6,
                            Title = "Tomato"
                        });
                });

            modelBuilder.Entity("Catalog.Domain.Products.Product", b =>
                {
                    b.HasOne("Catalog.Domain.Categories.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Catalog.Domain.Categories.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}

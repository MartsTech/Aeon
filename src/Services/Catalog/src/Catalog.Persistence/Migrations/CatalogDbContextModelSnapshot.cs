// <auto-generated />
using System;
using Catalog.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Catalog.Persistence.Migrations
{
    [DbContext(typeof(CatalogDbContext))]
    partial class CatalogDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Catalog.Domain.Categories.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("varchar(90)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1d0238af-4f54-4411-b6f3-248c69193e05"),
                            Name = "Fruits"
                        },
                        new
                        {
                            Id = new Guid("ea445d83-4def-4b12-8f18-f61638f2a9cb"),
                            Name = "Vegetables"
                        });
                });

            modelBuilder.Entity("Catalog.Domain.Products.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<decimal?>("Discount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Image")
                        .HasColumnType("longtext");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("varchar(90)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("02ea6906-3464-44b0-8280-b5057671b575"),
                            CategoryId = new Guid("1d0238af-4f54-4411-b6f3-248c69193e05"),
                            Description = "Orange fruit",
                            Discount = 0m,
                            Image = "",
                            Price = 2m,
                            Quantity = 2,
                            Title = "Orange"
                        },
                        new
                        {
                            Id = new Guid("58e71a71-8f85-4c8d-bcac-3430e43e7413"),
                            CategoryId = new Guid("1d0238af-4f54-4411-b6f3-248c69193e05"),
                            Description = "Red fruit",
                            Discount = 0m,
                            Image = "",
                            Price = 3m,
                            Quantity = 3,
                            Title = "Apple"
                        },
                        new
                        {
                            Id = new Guid("65af12f2-82c9-45d4-8b27-d160f70a6ae2"),
                            CategoryId = new Guid("ea445d83-4def-4b12-8f18-f61638f2a9cb"),
                            Description = "Green vegetable",
                            Discount = 0m,
                            Image = "",
                            Price = 4m,
                            Quantity = 1,
                            Title = "Cucumber"
                        },
                        new
                        {
                            Id = new Guid("9ee2fad3-5579-4e97-82e6-81d6e0afb702"),
                            CategoryId = new Guid("ea445d83-4def-4b12-8f18-f61638f2a9cb"),
                            Description = "Red vegetable",
                            Discount = 0m,
                            Image = "",
                            Price = 1m,
                            Quantity = 6,
                            Title = "Tomato"
                        });
                });

            modelBuilder.Entity("Catalog.Domain.Products.Product", b =>
                {
                    b.HasOne("Catalog.Domain.Categories.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Catalog.Domain.Categories.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
